title: CMS Blue Button 2.0 API
description: > # this means to ignore newlines until "baseurl:"
  The CMS Blue Button 2.0 API enables beneficiaries to connect their Medicare claims data to the applications, services, and research programs they trust.
baseurl: "" # the subpath of your site, e.g. /blog
url: "" # the base hostname & protocol for your site, e.g. http://example.com

# CSS REPO TRIGGER
# By default, this will look for CSS files locally here. For Test and Prod, this URL is updated to point to AWS
cssurl: bluebutton-css/dist/static-main.css

# permalink: /blog/:title/
permalink: /blog/:title
# Build settings
markdown: kramdown
theme: minima
plugins:
  - jekyll-feed

sass:
  style: compressed
  load_paths:
      - _sass
      - node_modules
exclude:
  - .gitignore
  - README.md
  - LICENSE.txt
  - RELEASE.txt
  - Gemfile
  - Gemfile.lock
  - node_modules
  - .gitattributes
  - package.json
  - Jenkinsfile
  - ops
  - assets/bluebutton-ig/
  - assets/public_open_source/

include: ["_pages"]

# Settings for RSS Feed for Blog
name: Blue Button 2.0 API Blog
# the next two values are defined above so we are changing the keys.
blog_description: Updates, how-to guides, sample apps, and other useful content related to Blue Button 2.0 API
blog_url: https://bluebutton.cms.gov

# S3 appears to require blog templates to append ".html" to files.
# Define "use_dot_html" = true in environment _config file
# default should be false i.e. not defined
# use_dot_html: true

# Configure the `_plugins/api_codings.rb` plugin. Note that you can run
# `bundle exec jekyll serve --verbose` to get debug output from that plugin.
codebooks:
  layout: variable.html
  xml_files:
    # These files are produced by the
    # `bluebutton-data-model.git/bluebutton-data-model-codebook-extractor`
    # project, and copied by hand to this project, as needed.
    - _codebooks/codebook-mbsf-abd.xml
    - _codebooks/codebook-ffs-claims.xml
    - _codebooks/codebook-pde.xml
    - _codebooks/codebook-mbsf-abcd.xml
