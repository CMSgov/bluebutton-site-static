---
import { Code } from "astro:components";

type CodeProps = Parameters<typeof Code>[0];

type Props = {
  code: string;
  lang: CodeProps["lang"];
  canCopy?: boolean;
};

const { code, lang, canCopy = true } = Astro.props;
const nanosecond = crypto.randomUUID();
---

<div class="bg-base-lightest border-1px border-base-lighter margin-y-2 position-relative">
  <div>
    {
      canCopy ? (
        <label class="usa-sr-only">
          Code snippet:
          <input type="text" id={`code-${nanosecond}`} value={code} readonly />
        </label>
      ) : null
    }
    <div class="tablet:grid-col-fill">
      <Code
        tabindex="-1"
        code={code}
        lang={lang}
        defaultColor={false}
        theme="github-light"
        style="background-color: transparent;"
        class="padding-left-2 padding-right-15 margin-y-0 padding-y-3"
      />
    </div>
    <div class="position-absolute top-1 right-1 z-100">
      <button
        class="usa-button usa-button--outline margin-0 bg-base-lightest hover:bg-base-lightest active:bg-base-lightest"
        id={`copybutton-${nanosecond}`}>Copy</button
      >
    </div>
  </div>
</div>

{canCopy 
  ? <script
  is:inline
  define:vars={{
    nanosecond,
  }}
>
  let buttonEl = document.getElementById(`copybutton-${nanosecond}`);
  buttonEl.addEventListener("click", () => {
    /* Get the text field */
    var copyText = document.getElementById(`code-${nanosecond}`);

    /* Select the text field */
    copyText.select();

    /* Copy the text inside the text field */
    document.execCommand("copy");
  });
</script> 
  : null}